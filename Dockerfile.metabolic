# Dockerfile for creating Metabolic in a container.  part 3, final dependenices and compile app
# Metabolic source: https://github.com/AnantharamanLab/METABOLIC
# Dockerfile github: https://github.com/tin6150/metabolic/blob/master/Dockerfile.metabolic

#FROM ubuntu:19.04
#FROM r-base:3.6.2
FROM tin6150/perl4metabolic
MAINTAINER Tin (at) LBL.gov

#RUN  echo "Building ... this isn't likely working yet" 

ARG DEBIAN_FRONTEND=noninteractive
ARG PERL_MM_USE_DEFAULT=1
ARG TZ=PST8PDT 
#ENV TZ=America/Chicago # tail -1 /usr/share/zoneinfo/America/Chicago = CST6CDT,M3.2.0,M11.1.0
#ARG PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/conda/bin
ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/conda/bin
ENV GTDBTK_DATA_PATH=/tmp/GTDBTK_DATA 
# either overwrite GTDBTK_DATA_PATH env with right path or place a sym link on the host


RUN touch    _TOP_DIR_OF_CONTAINER_  ;\
    echo "begining docker build process at " | tee -a _TOP_DIR_OF_CONTAINER_  ;\
    date  | tee -a       _TOP_DIR_OF_CONTAINER_ ;\
		echo "df -h at beginning of Docker.metabolic" | tee -a _TOP_DIR_OF_CONTAINER_ ;\
		df -h | tee -a   _TOP_DIR_OF_CONTAINER_               ;\
		apt-get -y --quiet install git                        ;\
    test -d /opt/gitrepo  || mkdir -p /opt/gitrepo        ;\
    cd      /opt/gitrepo ;\
    test -d /opt/gitrepo/metabolic  || git clone https://github.com/tin6150/metabolic.git  ;\
    cd /opt/gitrepo/metabolic &&  git pull && cd -                                         ;\
    cd ../.. ;\
    echo '========================================================'   ;\
    echo "installing packages wget/sh"  | tee -a _TOP_DIR_OF_CONTAINER_   ;\
    date | TZ=PST8PDT tee -a      _TOP_DIR_OF_CONTAINER_              ;\
    echo '========================================================'   ;\
    mkdir -p Downloads &&  cd Downloads ;\
    wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda3.sh  ;\
    bash miniconda3.sh -b -p /opt/conda ;\
    echo 'export PATH="${PATH}:/opt/conda/bin"'                       >> /etc/bashrc    ;\
    echo 'export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/opt/conda/lib"' >> /etc/bashrc    ;\
    cd .. ;\

    ##There is bioconda sambamba so this isn't really needed
    ##mkdir -p /opt/sambamba &&  cd /opt/sambamba ;\
    ##wget --quiet https://github.com/biod/sambamba/releases/download/v0.7.1/sambamba-0.7.1-linux-static.gz ;\
    ##gunzip sambamba-0.7.1-linux-static.gz  ;\
    ##echo 'export PATH="${PATH}:/opt/sambamba/bin"'                       >> /etc/bashrc    ;\
    ##echo 'export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/opt/sambamba/lib"' >> /etc/bashrc    ;\
    ##cd ../.. ;\

    echo '==================================================================' ;\
    echo '==================================================================' ;\
    echo "installing packages via conda"  | tee -a _TOP_DIR_OF_CONTAINER_     ;\
    date | TZ=PST8PDT tee -a                       _TOP_DIR_OF_CONTAINER_     ;\
    echo '==================================================================' ;\
    echo '==================================================================' ;\
    #/opt/conda/bin/conda config --add channels defaults ;\
    /opt/conda/bin/conda config --add channels bioconda             ;\
    /opt/conda/bin/conda config --add channels conda-forge          ;\
    # --quiet just skip the progress bar.  -vvv for trace 
    /opt/conda/bin/conda install -y --quiet bwa coverm sambamba     ;\
    #/opt/conda/bin/conda install -y --quiet -v -c bioconda gtdbtk   ;\
    # conda version above somehow result in version conflict, but pip install works (cuz get 1.0.1 ?)
		/opt/conda/bin/pip install  gtdbtk                              ;\
    echo 'Ending.  Last line of RUN block in Dockerbuild without continuation :)' 


# trying to split into multiple RUN to see if get around docker hub out of space problem
RUN echo '========================================================'   ;\
    echo '========================================================'   ;\
    echo "compiling metabolic" | tee -a _TOP_DIR_OF_CONTAINER_        ;\
    date | TZ=PST8PDT tee -a            _TOP_DIR_OF_CONTAINER_        ;\
    echo '========================================================'   ;\
    echo '========================================================'   ;\


    #mkdir /opt/metabolic && cd /opt/metabolic ;\
    cd /opt ;\
    git clone --quiet https://github.com/AnantharamanLab/METABOLIC.git ;\
    cd METABOLIC ;\
    git log > metabolics.git.log ;\
		echo "df -h before Metabolic run_to_setup.sh" | tee -a   /_TOP_DIR_OF_CONTAINER_ ;\
		df -h | tee -a   /_TOP_DIR_OF_CONTAINER_ ;\
    bash -x ./run_to_setup.sh | tee run_to_setup.LOG ;\
		echo $? | tee run_to_setup.exit.code             ;\
		echo "df -h before Metabolic run_to_setup.sh" | tee -a   /_TOP_DIR_OF_CONTAINER_ ;\
		df -h | tee -a   /_TOP_DIR_OF_CONTAINER_ ;\
    chmod a+x *pl ;\
    chmod a+x /opt/METABOLIC/METABOLIC-G.pl ;\
    chmod a+x /opt/METABOLIC/METABOLIC-C.pl ;\
    touch  _METABOLIC_BUILD_END_         ;\
    cd ../.. ;\
    mkdir slowdata ;\
    echo 'Ending.  Last line of RUN block in Dockerbuild without continuation :)' 

# below can be removed once Dockerfile.base has executed a new build.
RUN     apt-get -y --force-yes --quiet install  xpdf   libxml2 libtinfo5 libtinfo6  diamond-aligner ;\
        cd /usr/bin && ln -s diamond-aligner diamond && cd - ;\ 
        PERL_MM_USE_DEFAULT=1 cpan -fi Array/Split.pm  ;\
        PERL_MM_USE_DEFAULT=1 cpan -fi Data/OptList.pm  ;\
        PERL_MM_USE_DEFAULT=1 cpan -fi Parallel/ForkManager.pm  ;\

        echo 'Ending.  Last line of RUN block in Dockerbuild without continuation :)' 

RUN     cd / \
  && touch _TOP_DIR_OF_CONTAINER_  \
  && TZ=PST8PDT date  >> _TOP_DIR_OF_CONTAINER_  \
  && echo  "Build Info: Dockerfile 2019.1225.1227"  >> _TOP_DIR_OF_CONTAINER_   \
  && echo  "Grand Finale"

#ENV TZ America/Los_Angeles 
#ENV TZ likely changed/overwritten by container's /etc/csh.cshrc
ENV DOCKERFILE Dockerfile.metabolic # DOES overwrite parent def of ENV DOCKERFILE
ENV TEST_DOCKER_ENV_REF https://vsupalov.com/docker-arg-env-variable-guide/#setting-env-values
# but how to append, eg add to PATH?

ENTRYPOINT [ "/bin/bash" ]
#ENTRYPOINT [ "TZ=PST8PDT /bin/bash" ]
# if no defined ENTRYPOINT, default to bash inside the container
